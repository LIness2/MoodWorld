from flask import Flask, render_template
from final2 import annotate_articles_with_emotions, fetch_articles, save_articles_to_mongo, plot_emotions
from pymongo import MongoClient

# Création de l'app Flask
app = Flask(__name__)

# Connexion à MongoDB
client = MongoClient("mongodb://localhost:27017/")
db = client["world_mood"]
collection = db["articles"]

# Intégration de Dash dans Flask
from visualisation_dash import app as dash_app



@app.route("/")
def index():
    topics = ["politique", "écologie", "technologie"]
    langs = ["fr", "en"]
    method = "gnews"

    for topic in topics:
        for lang in langs:
            articles = fetch_articles(method=method, query=topic, lang=lang, max_articles=5)
            save_articles_to_mongo(articles)

    annotate_articles_with_emotions()
    plot_emotions()

    articles = list(collection.find({"emotion": {"$exists": True}}).sort("publication_date", -1).limit(20))
    return render_template("index.html", articles=articles)

@app.route("/stats")
def stats():
    pipeline = [
        {"$match": {"emotion": {"$exists": True}}},
        {"$group": {"_id": "$emotion", "count": {"$sum": 1}}},
        {"$sort": {"count": -1}}
    ]
    results = list(collection.aggregate(pipeline))

    labels = [r["_id"] for r in results]
    values = [r["count"] for r in results]

    return render_template("stats.html", labels=labels, values=values)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=True)
