import streamlit as st
import pandas as pd
import pymongo
import plotly.express as px
from datetime import datetime

# Configuration de la page Streamlit
st.set_page_config(page_title="WorldMood - Analyse des √âmotions", layout="wide")

# --- Connexion MongoDB ---
client = pymongo.MongoClient("mongodb://localhost:27017/")
db = client["articles_db"]
collection = db["articles"]

# --- R√©cup√©ration des donn√©es ---
documents = list(collection.find({"emotion": {"$exists": True}}))
st.sidebar.success(f"üì∞ {len(documents)} articles annot√©s charg√©s.")

# --- Nettoyage & Transformation ---
data = []
for doc in documents:
    emotion = doc.get("emotion")
    country = doc.get("pays") or doc.get("lang") or "Inconnu"
    theme = doc.get("tags", "Autre")
    date_str = doc.get("publication_date")

    try:
        year = datetime.strptime(date_str, "%Y-%m-%dT%H:%M:%SZ").year
    except:
        year = None

    if emotion and theme:
        data.append({
            "theme": theme,
            "country": country,
            "emotion": emotion,
            "year": year,
            "count": 1
        })

df = pd.DataFrame(data)

if df.empty:
    st.error("‚ùå Aucune donn√©e √† afficher. V√©rifie que la base contient des √©motions annot√©es.")
    st.stop()

# --- Agr√©gation ---
df_grouped = df.groupby(["theme", "country", "emotion", "year"]).sum().reset_index()

# --- Couleurs personnalis√©es ---
emotion_colors = {
    "joy": "yellow",
    "sadness": "blue",
    "anger": "red",
    "fear": "purple",
    "surprise": "orange",
    "love": "pink",
    "neutral": "grey"
}

# --- Interface utilisateur ---
st.title("üåç WorldMood ‚Äì Visualisation des √©motions")

selected_theme = st.selectbox(
    "üéØ Choisissez un th√®me :",
    sorted(df_grouped["theme"].unique())
)

filtered = df_grouped[df_grouped["theme"] == selected_theme]

# --- Bar Chart ---
fig_bar = px.bar(
    filtered,
    x="country",
    y="count",
    color="emotion",
    color_discrete_map=emotion_colors,
    title=f"üìä Nombre d‚Äôarticles par √©motion ‚Äì Th√®me : {selected_theme}"
)
st.plotly_chart(fig_bar, use_container_width=True)

# --- Bubble Chart ---
fig_bubble = px.scatter(
    filtered,
    x="country",
    y="year",
    size="count",
    color="emotion",
    color_discrete_map=emotion_colors,
    title=f"üìà √âvolution temporelle des √©motions ‚Äì Th√®me : {selected_theme}"
)
st.plotly_chart(fig_bubble, use_container_width=True)
